# =============================================================================
# CryptoPulse Production Nginx Configuration - 100% Production Ready
# =============================================================================
# Comprehensive reverse proxy configuration with advanced features

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex on;
    accept_mutex_delay 100ms;
}

# Stream module for TCP/UDP load balancing (if needed)
stream {
    # TCP load balancing for database connections (example)
    upstream postgres_backend {
        server postgres:5432 max_fails=3 fail_timeout=30s;
        server postgres-2:5432 max_fails=3 fail_timeout=30s backup;
    }
    
    server {
        listen 5433;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # =========================================================================
    # Logging Configuration - Production Ready
    # =========================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": $status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time"'
    '}';

    access_log /var/log/nginx/access.log main buffer=16k flush=5s;
    access_log /var/log/nginx/access.json json buffer=16k flush=5s;

    # =========================================================================
    # Performance Optimizations - Production Ready
    # =========================================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Connection limits
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;

    # =========================================================================
    # Gzip Compression - Advanced Configuration
    # =========================================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/x-javascript
        application/xhtml+xml
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/x-font-ttf;

    # Brotli compression (if available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    # =========================================================================
    # Security Headers - Comprehensive
    # =========================================================================
    map $sent_http_content_type $csp_header {
        default "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.cryptopulse.com wss://api.cryptopulse.com; frame-ancestors 'self';";
        ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.cryptopulse.com wss://api.cryptopulse.com; frame-ancestors 'self';";
    }

    # =========================================================================
    # Rate Limiting - Advanced Configuration
    # =========================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=register:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Rate limiting by user agent
    map $http_user_agent $blocked_agent {
        default 0;
        ~*malicious 1;
        ~*bot 1;
        ~*crawler 1;
    }

    # =========================================================================
    # Upstream Configuration - Load Balancing
    # =========================================================================
    
    # Backend API upstream with advanced load balancing
    upstream backend_api {
        # Load balancing method
        least_conn;
        
        # Primary servers
        server backend:1337 weight=3 max_fails=3 fail_timeout=30s;
        server backend-2:1337 weight=2 max_fails=3 fail_timeout=30s;
        
        # Backup servers
        server backend-3:1337 backup;
        
        # Health check configuration
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # Frontend upstream
    upstream frontend_app {
        server frontend:80 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Cloud services upstream
    upstream cloud_services {
        server cloud:3001 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # WebSocket upstream for real-time features
    upstream websocket_backend {
        server backend:1337 weight=1 max_fails=3 fail_timeout=30s;
        server backend-2:1337 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # =========================================================================
    # Cache Configuration
    # =========================================================================
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=1g 
                     inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m 
                     max_size=10g inactive=24h use_temp_path=off;

    # Cache status
    map $upstream_cache_status $cache_status {
        '' '-';
        default $upstream_cache_status;
    }

    # =========================================================================
    # SSL Configuration - Production Ready
    # =========================================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/ca.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # =========================================================================
    # HTTP to HTTPS Redirect
    # =========================================================================
    server {
        listen 80;
        server_name api.cryptopulse.com app.cryptopulse.com cloud.cryptopulse.com;
        
        # Security headers for redirect
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # =========================================================================
    # Backend API Server - Production Configuration
    # =========================================================================
    server {
        listen 443 ssl http2;
        server_name api.cryptopulse.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/private-key.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $csp_header always;
        add_header X-Cache-Status $cache_status always;

        # Connection limits
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;

        # Block malicious user agents
        if ($blocked_agent) {
            return 403;
        }

        # Health check endpoint (no rate limiting)
        location = /health {
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }

        # API routes with rate limiting and caching
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy configuration
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Caching for GET requests
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Buffer configuration
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Authentication endpoints with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Login endpoint with very strict rate limiting
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Registration endpoint
        location /api/auth/register {
            limit_req zone=register burst=3 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Trading API with enhanced security
        location /api/trading/ {
            limit_req zone=api burst=15 nodelay;
            
            # Additional security headers for trading
            add_header X-Robots-Tag "noindex, nofollow" always;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for trading operations
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Admin API with IP restrictions (example)
        location /api/admin/ {
            # Allow only specific IPs (configure as needed)
            # allow 192.168.1.0/24;
            # deny all;
            
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # =========================================================================
    # Frontend Application Server
    # =========================================================================
    server {
        listen 443 ssl http2;
        server_name app.cryptopulse.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/private-key.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $csp_header always;

        # Connection limits
        limit_conn conn_limit_per_ip 30;
        limit_conn conn_limit_per_server 2000;

        # General rate limiting
        limit_req zone=general burst=50 nodelay;

        # Health check
        location = /health {
            proxy_pass http://frontend_app;
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            proxy_pass http://frontend_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            add_header X-Cache-Status $cache_status;
            
            # Enable gzip for text files
            gzip_static on;
        }

        # HTML files with short caching
        location ~* \.html$ {
            proxy_pass http://frontend_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Cache-Status $cache_status;
        }

        # Main application
        location / {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # No caching for main app
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # API proxy for frontend (if needed)
        location /api/ {
            proxy_pass https://api.cryptopulse.com;
            proxy_http_version 1.1;
            proxy_set_header Host api.cryptopulse.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
    }

    # =========================================================================
    # Cloud Services Server
    # =========================================================================
    server {
        listen 443 ssl http2;
        server_name cloud.cryptopulse.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/private-key.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Connection limits
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 500;

        # Rate limiting
        limit_req zone=general burst=30 nodelay;

        # Health check
        location = /health {
            proxy_pass http://cloud_services;
            access_log off;
        }

        # Cloud services
        location / {
            proxy_pass http://cloud_services;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # =========================================================================
    # Global Error Pages
    # =========================================================================
    server {
        listen 443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/private-key.pem;
        
        return 444;
    }
}
