#!/usr/bin/env sh
# Production-ready pre-push hook
# Runs comprehensive checks before pushing to remote

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}🚀 Running pre-push checks...${NC}"

# Check if we're in CI environment
if [ -n "$CI" ]; then
  echo "${YELLOW}CI environment detected, skipping pre-push hooks${NC}"
  exit 0
fi

# Function to check if command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Function to run command with timeout
run_check() {
  local name="$1"
  local cmd="$2"
  local timeout="${3:-600}" # Default 10 minute timeout
  
  echo "${BLUE}📝 $name...${NC}"
  
  if ! command_exists "$(echo "$cmd" | cut -d' ' -f1)"; then
    echo "${YELLOW}⚠️ Command not found, skipping $name${NC}"
    return 0
  fi
  
  if timeout "$timeout" sh -c "$cmd" 2>/dev/null; then
    echo "${GREEN}✅ $name passed${NC}"
  else
    local exit_code=$?
    if [ $exit_code -eq 124 ]; then
      echo "${RED}❌ $name failed - timeout after ${timeout}s${NC}"
    else
      echo "${RED}❌ $name failed with exit code $exit_code${NC}"
    fi
    exit 1
  fi
}

# 1. Run full test suite
run_check "Running full test suite" "npm test -- --run --coverage" 600

# 2. Type checking
run_check "TypeScript type checking" "npm run typecheck" 180

# 3. Lint all files
run_check "ESLint check (all files)" "npm run lint -- --max-warnings 0" 120

# 4. Format check
if command_exists prettier; then
  run_check "Prettier format check" "npm run format:check" 60
fi

# 5. Build verification
run_check "Production build verification" "npm run build:production" 600

# 6. Security audit
if command_exists npm; then
  echo "${BLUE}🔒 Running comprehensive security audit...${NC}"
  if npm audit --audit-level=moderate --omit=dev --silent 2>/dev/null; then
    echo "${GREEN}✅ Security audit passed${NC}"
  else
    echo "${RED}❌ Security vulnerabilities found, please fix before pushing${NC}"
    exit 1
  fi
fi

# 7. Bundle size check (if available)
if command_exists npx && [ -f "package.json" ]; then
  echo "${BLUE}📦 Checking bundle size...${NC}"
  if npx bundlesize 2>/dev/null; then
    echo "${GREEN}✅ Bundle size check passed${NC}"
  else
    echo "${YELLOW}⚠️ Bundle size check failed or not configured${NC}"
  fi
fi

# 8. Check for sensitive data
echo "${BLUE}🔍 Checking for sensitive data...${NC}"
if git diff --cached --name-only | xargs grep -l -i "password\|secret\|key\|token" 2>/dev/null; then
  echo "${RED}❌ Potential sensitive data detected in staged files${NC}"
  echo "${RED}   Please remove or properly secure sensitive information${NC}"
  exit 1
else
  echo "${GREEN}✅ No sensitive data detected${NC}"
fi

echo "${GREEN}✅ All pre-push checks completed successfully!${NC}"
echo "${GREEN}🚀 Ready to push to remote repository${NC}"
