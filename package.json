{
  "name": "cryptopulse-monorepo",
  "private": true,
  "version": "2.0.0",
  "description": "CryptoPulse Trading Bot - World-Class Monorepo with Zero-Pain Setup",
  "author": "CryptoPulse Team",
  "license": "MIT",
  "packageManager": "pnpm@10.18.0",
  "scripts": {
    "setup": "node setup.js",
    "setup:dev": "pnpm install",
    "setup:clean": "node setup.js",
    "build:all": "pnpm -r build",
    "test:all": "pnpm -r test",
    "lint:all": "pnpm -r lint",
    "start:backend": "pnpm --filter backend start",
    "start:frontend": "pnpm --filter frontend dev",
    "start:cloud": "pnpm --filter cloud start",
    "dev:backend": "pnpm --filter backend dev",
    "dev:frontend": "pnpm --filter frontend dev",
    "dev:all": "concurrently \"pnpm dev:backend\" \"pnpm dev:frontend\"",
    "build:backend": "pnpm --filter backend build",
    "build:frontend": "pnpm --filter frontend build",
    "build:production": "pnpm -r --filter=\"!cloud\" build:production",
    "test:backend": "pnpm --filter backend test",
    "test:frontend": "pnpm --filter frontend test",
    "lint:backend": "pnpm --filter backend lint",
    "lint:frontend": "pnpm --filter frontend lint",
    "typecheck:all": "pnpm -r typecheck",
    "audit:security": "pnpm audit --audit-level moderate",
    "audit:deps": "pnpm audit",
    "audit:full": "pnpm audit && pnpm -r audit:security",
    "clean": "pnpm -r clean && rimraf node_modules .pnpm-store",
    "clean:install": "pnpm clean && pnpm install",
    "update:deps": "node scripts/update-dependencies.js",
    "update:deps:safe": "pnpm update -r --latest",
    "monitor:performance": "node scripts/performance-monitor.js",
    "monitor:security": "node scripts/security-audit-enhanced.js",
    "format:all": "prettier --write \"**/*.{js,ts,tsx,json,md,yml,yaml}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md,yml,yaml}\"",
    "lint:fix": "eslint . --fix",
    "precommit": "pnpm lint:all && pnpm typecheck:all && pnpm test:all",
    "production:check": "pnpm audit:full && pnpm test:all && pnpm build:production",
    "config:validate": "node scripts/config-validator.js",
    "config:secrets": "node scripts/secrets-manager.js",
    "config:secrets:generate": "node scripts/secrets-manager.js generate",
    "config:secrets:audit": "node scripts/secrets-manager.js audit",
    "config:secrets:rotate": "node scripts/secrets-manager.js rotate",
    "infra:validate": "node scripts/infrastructure-validator.js",
    "infra:backup": "node scripts/backup-manager.js backup",
    "infra:backup:list": "node scripts/backup-manager.js list",
    "infra:backup:cleanup": "node scripts/backup-manager.js cleanup",
    "infra:scale:start": "node scripts/auto-scaler.js start",
    "infra:scale:status": "node scripts/auto-scaler.js status",
    "infra:scale:metrics": "node scripts/auto-scaler.js metrics",
    "deploy:northflank": "chmod +x scripts/deploy-northflank.sh && ./scripts/deploy-northflank.sh",
    "deploy:all": "node scripts/deployment-automation.js deploy production",
    "deploy:backend": "node scripts/deployment-automation.js deploy production backend",
    "deploy:frontend": "node scripts/deployment-automation.js deploy production frontend",
    "deploy:cloud": "node scripts/deployment-automation.js deploy production cloud",
    "deploy:staging": "node scripts/deployment-automation.js deploy staging",
    "deploy:production": "node scripts/deployment-automation.js deploy production",
    "deploy:rollback": "node scripts/deployment-automation.js rollback production",
    "deploy:status": "node scripts/deployment-automation.js status",
    "test:all": "node scripts/testing-automation.js all production",
    "test:unit": "node scripts/testing-automation.js run unit development",
    "test:integration": "node scripts/testing-automation.js run integration staging",
    "test:e2e": "node scripts/testing-automation.js run e2e staging",
    "test:performance": "node scripts/testing-automation.js performance staging",
    "test:security": "node scripts/testing-automation.js security production",
    "test:smoke": "node scripts/testing-automation.js smoke production",
    "security:scan": "node scripts/security-automation.js scan",
    "security:dependency": "node scripts/security-automation.js dependency",
    "security:code": "node scripts/security-automation.js code",
    "security:infrastructure": "node scripts/security-automation.js infrastructure",
    "security:compliance": "node scripts/security-automation.js compliance",
    "security:audit": "node scripts/security-automation.js scan all",
    "migration:verify": "node migration-complete.js",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:install": "playwright install"
  },
  "devDependencies": {
    "@types/node": "^22.10.2",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "pnpm": "^10.18.0",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1",
    "typescript": "^5.9.3",
    "@playwright/test": "^1.48.0",
    "playwright": "^1.48.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "pnpm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/telangrocks/CryptoPulse-Trading-Bot.git"
  },
  "keywords": [
    "cryptocurrency",
    "trading",
    "bot",
    "ai",
    "monorepo",
    "production-ready"
  ]
}
